{"version":3,"file":"static/js/288.6516c5ab.chunk.js","mappings":"wOAEaA,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAClC,OACE,+BACE,2BACE,qCAAaD,MACb,uBAAIC,UC0BZ,EA5BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,QAChD,CAACL,KAGF,8BACGF,EAAQQ,QACP,wBACGR,EAAQQ,QACPR,EAAQS,KAAI,SAAAC,GAAI,OACd,SAACd,EAAD,CAEEC,KAAMa,EAAKC,OACXb,KAAMY,EAAKE,SAFNF,EAAKG,UAOlB,wD,iMCvBFC,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAGGM,EAAY,mCAAG,sGACHJ,EAAgBK,IAAI,uBADjB,uBAClBd,EADkB,EAClBA,KADkB,kBAEnBA,EAAKe,SAFc,2CAAH,qDAIZC,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CACNK,MAAAA,KAHwB,uBACpBjB,EADoB,EACpBA,KADoB,kBAMrBA,EAAKe,SANgB,2CAAH,sDAQdG,EAAgB,mCAAG,WAAMZ,GAAN,yFACPG,EAAgBK,IAAhB,gBAA6BR,IADtB,uBACtBN,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBmB,EAAa,mCAAG,WAAMb,GAAN,yFACJG,EAAgBK,IAAhB,iBAA8BR,EAA9B,aADI,uBACnBN,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIbF,EAAe,mCAAG,WAAMQ,GAAN,yFACNG,EAAgBK,IAAhB,mBAChBR,EADgB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,EAAKe,SAHiB,2CAAH","sources":["components/Reviews/ReviewsItem.jsx","components/Reviews/Reviews.jsx","service/service.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewsItem = ({ name, text }) => {\n  return (\n    <>\n      <li>\n        <h3>Author: {name}</h3>\n        <p>{text}</p>\n      </li>\n    </>\n  );\n};\n\nReviewsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRewiesMovies } from 'service/service';\nimport { ReviewsItem } from './ReviewsItem';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getRewiesMovies(movieId).then(data => setReviews(data));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.length &&\n            reviews.map(item => (\n              <ReviewsItem\n                key={item.id}\n                name={item.author}\n                text={item.content}\n              ></ReviewsItem>\n            ))}\n        </ul>\n      ) : (\n        <h3>There is no reviews yet</h3>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY_API = 'a1fbf574afa240654ce82ff2490808e3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const getPoPMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data.results;\n};\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["ReviewsItem","name","text","useState","reviews","setReviews","movieId","useParams","useEffect","getRewiesMovies","then","data","length","map","item","author","content","id","defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPoPMovies","get","results","getSerchMovies","query","getDetailsMovies","getCastMovies"],"sourceRoot":""}