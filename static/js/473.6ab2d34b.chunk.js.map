{"version":3,"file":"static/js/473.6ab2d34b.chunk.js","mappings":"+NAiEA,UAzDqB,WAAO,IAAD,QACzB,GAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBP,GAASQ,MAAK,SAAAC,GAAI,OAAIV,EAAWU,QACjD,CAACT,KAGF,SAAC,IAAD,UACGF,GACC,UAAC,IAAD,YACE,SAAC,IAAD,CACEY,KAAK,SACLC,QAAS,0BAAMP,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUU,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAFnD,sBAMA,gBACEC,IACEhB,EAAQiB,YAAR,yCACsCjB,EAAQiB,aAC1C,6FAENC,IAAI,GACJC,MAAM,SAER,4BACE,0BACGnB,EAAQoB,MAAQpB,EAAQoB,MAAQpB,EAAQqB,KAD3C,KAEGrB,EAAQsB,aAAaC,MAAM,EAAG,GAFjC,QAIA,wCAAgBC,KAAKC,MAAOzB,EAAQ0B,aAAe,GAAM,KAAzD,QACA,sCACA,uBAAI1B,EAAQ2B,YACZ,oCACA,uBAAI3B,EAAQ4B,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKT,QAAMU,KAAK,YAEjD,oDACA,SAAC,KAAD,CAAMjB,MAAO,CAAEC,KAAI,iBAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUU,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAOiB,GAAG,OAAxD,mBAGA,SAAC,KAAD,CAAMlB,MAAO,CAAEC,KAAI,iBAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUU,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAOiB,GAAG,UAAxD,sBAGA,mBACA,SAAC,KAAD,QAGF,SAAC,IAAD,Q,uGCzDKC,EAAaC,EAAAA,GAAAA,OAAH,yCAIVC,EAAYD,EAAAA,GAAAA,IAAH,qF,iMCFhBE,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAGGM,EAAY,mCAAG,sGACHJ,EAAgBK,IAAI,uBADjB,uBAClBhC,EADkB,EAClBA,KADkB,kBAEnBA,EAAKiC,SAFc,2CAAH,qDAIZC,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CACNK,MAAAA,KAHwB,uBACpBnC,EADoB,EACpBA,KADoB,kBAMrBA,EAAKiC,SANgB,2CAAH,sDAQdnC,EAAgB,mCAAG,WAAMsC,GAAN,yFACPT,EAAgBK,IAAhB,gBAA6BI,IADtB,uBACtBpC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBqC,EAAa,mCAAG,WAAMD,GAAN,yFACJT,EAAgBK,IAAhB,iBAA8BI,EAA9B,aADI,uBACnBpC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIbsC,EAAe,mCAAG,WAAMF,GAAN,yFACNT,EAAgBK,IAAhB,mBAChBI,EADgB,aADM,uBACrBpC,EADqB,EACrBA,KADqB,kBAGtBA,EAAKiC,SAHiB,2CAAH","sources":["Pages/MovieDetails.jsx","Pages/MovieDetails.styled.js","service/service.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { getDetailsMovies } from 'service/service';\nimport { Link } from 'react-router-dom';\nimport { NotFound } from './NotFound';\nimport { BackButton } from './MovieDetails.styled';\nimport { Container } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getDetailsMovies(movieId).then(data => setDetails(data));\n  }, [movieId]);\n\n  return (\n    <Container>\n      {details ? (\n        <Container>\n          <BackButton\n            type=\"button\"\n            onClick={() => navigate(location?.state?.from ?? '/')}\n          >\n            Go back\n          </BackButton>\n          <img\n            src={\n              details.poster_path\n                ? `https://image.tmdb.org/t/p/w500${details.poster_path}`\n                : 'https://s1.hostingkartinok.com/uploads/images/2022/07/40ceaea2e22257d2a139ca5a0c0b8ba9.jpg'\n            }\n            alt=\"\"\n            width=\"400\"\n          />\n          <div>\n            <h2>\n              {details.title ? details.title : details.name} (\n              {details.release_date.slice(0, 4)})\n            </h2>\n            <p>User Score: {Math.round((details.vote_average / 10) * 100)}%</p>\n            <h3>Overview</h3>\n            <p>{details.overview}</p>\n            <h3>Genres</h3>\n            <p>{details.genres.map(item => item.name).join(', ')}</p>\n          </div>\n          <h3>Additional information</h3>\n          <Link state={{ from: location?.state?.from ?? '/' }} to=\"cast\">\n            Cast\n          </Link>\n          <Link state={{ from: location?.state?.from ?? '/' }} to=\"reviews\">\n            Reviews\n          </Link>\n          <br />\n          <Outlet />\n        </Container>\n      ) : (\n        <NotFound />\n      )}\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const BackButton = styled.button`\n  padding: 5px;\n`;\n\nexport const Container = styled.div`\n  max-width: 920px;\n  margin: 0 auto;\n  padding: 0 15px;\n`;\n","import axios from 'axios';\n\nconst KEY_API = 'a1fbf574afa240654ce82ff2490808e3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const getPoPMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data.results;\n};\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","details","setDetails","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getDetailsMovies","then","data","type","onClick","state","from","src","poster_path","alt","width","title","name","release_date","slice","Math","round","vote_average","overview","genres","map","item","join","to","BackButton","styled","Container","defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPoPMovies","get","results","getSerchMovies","query","id","getCastMovies","getRewiesMovies"],"sourceRoot":""}