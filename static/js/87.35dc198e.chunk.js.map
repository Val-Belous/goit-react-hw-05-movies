{"version":3,"file":"static/js/87.35dc198e.chunk.js","mappings":"uOAEaA,EAAW,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,IAC1C,OACE,+BACE,2BACE,gBACEC,IACED,EAAG,yCACmCA,GAClC,6FAENE,IAAI,GACJC,MAAM,SAER,uBAAIL,KACJ,uBAAIC,UCgBZ,EA3Ba,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcH,GAASI,MAAK,gBAAGN,EAAH,EAAGA,KAAH,OAAcC,EAAQD,QACjD,CAACE,KAGF,+BAEI,wBACGF,EAAKO,QACJP,EAAKQ,KAAI,SAAAC,GAAI,OACX,SAACjB,EAAD,CAEEC,KAAMgB,EAAKhB,KACXC,UAAWe,EAAKf,UAChBC,IAAKc,EAAKC,cAHLD,EAAKE,a,iMChBpBC,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAGGM,EAAY,mCAAG,sGACHJ,EAAgBK,IAAI,uBADjB,uBAClBC,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAIZC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAgBK,IAAI,gBAAiB,CAC1DF,OAAQ,CACNM,MAAAA,KAHwB,uBACpBH,EADoB,EACpBA,KADoB,kBAMrBA,EAAKC,SANgB,2CAAH,sDAQdG,EAAgB,mCAAG,WAAMb,GAAN,yFACPG,EAAgBK,IAAhB,gBAA6BR,IADtB,uBACtBS,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBf,EAAa,mCAAG,WAAMM,GAAN,yFACJG,EAAgBK,IAAhB,iBAA8BR,EAA9B,aADI,uBACnBS,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIbK,EAAe,mCAAG,WAAMd,GAAN,yFACNG,EAAgBK,IAAhB,mBAChBR,EADgB,aADM,uBACrBS,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH","sources":["components/Cast/CastItem.jsx","components/Cast/Cast.jsx","service/service.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const CastItem = ({ name, character, img }) => {\n  return (\n    <>\n      <li>\n        <img\n          src={\n            img\n              ? `https://image.tmdb.org/t/p/w500${img}`\n              : 'https://s1.hostingkartinok.com/uploads/images/2022/07/40ceaea2e22257d2a139ca5a0c0b8ba9.jpg'\n          }\n          alt=\"\"\n          width=\"200\"\n        />\n        <p>{name}</p>\n        <p>{character}</p>\n      </li>\n    </>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { getCastMovies } from 'service/service';\nimport { useParams } from 'react-router-dom';\nimport { CastItem } from './CastItem';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastMovies(movieId).then(({ cast }) => setCast(cast));\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <ul>\n          {cast.length &&\n            cast.map(item => (\n              <CastItem\n                key={item.id}\n                name={item.name}\n                character={item.character}\n                img={item.profile_path}\n              ></CastItem>\n            ))}\n        </ul>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY_API = 'a1fbf574afa240654ce82ff2490808e3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const getPoPMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data.results;\n};\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["CastItem","name","character","img","src","alt","width","useState","cast","setCast","movieId","useParams","useEffect","getCastMovies","then","length","map","item","profile_path","id","defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPoPMovies","get","data","results","getSerchMovies","query","getDetailsMovies","getRewiesMovies"],"sourceRoot":""}