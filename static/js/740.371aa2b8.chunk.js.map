{"version":3,"file":"static/js/740.371aa2b8.chunk.js","mappings":"2MAsDA,UAjDe,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAC0B,OAA9BT,EAAaU,IAAI,WAGrBC,EAAAA,EAAAA,IAAeX,EAAaU,IAAI,UAAUE,KAAKN,KAC9C,CAACN,EAAcM,IAYlB,OACE,iCACE,kBAAMO,SARO,SAAAC,GACfA,EAAIC,iBACJd,EAAgB,CAAEE,MAAOA,IACzBC,EAAS,KAKP,WACE,kBAAOY,KAAK,OAAOC,KAAK,QAAQC,MAAOf,EAAOgB,SAb/B,SAAAL,GACnBV,EAASU,EAAIM,OAAOF,WAahB,mBAAQF,KAAK,SAAb,uBAEDX,EAAMgB,QACL,wBACGhB,GACCA,EAAMiB,KAAI,SAAAC,GACR,OACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMlB,GAAYmB,GAAE,kBAAaH,EAAKI,IAArD,SACGJ,EAAKK,MAAQL,EAAKK,MAAQL,EAAKN,QAF3BM,EAAKI,UAStB,iE,iMC5CFE,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAGGM,EAAY,mCAAG,sGACHJ,EAAgBrB,IAAI,uBADjB,uBAClB0B,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAIZ1B,EAAc,mCAAG,WAAMR,GAAN,yFACL4B,EAAgBrB,IAAI,gBAAiB,CAC1DwB,OAAQ,CACN/B,MAAAA,KAHwB,uBACpBiC,EADoB,EACpBA,KADoB,kBAMrBA,EAAKC,SANgB,2CAAH,sDAQdC,EAAgB,mCAAG,WAAMX,GAAN,yFACPI,EAAgBrB,IAAhB,gBAA6BiB,IADtB,uBACtBS,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBG,EAAa,mCAAG,WAAMZ,GAAN,yFACJI,EAAgBrB,IAAhB,iBAA8BiB,EAA9B,aADI,uBACnBS,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIbI,EAAe,mCAAG,WAAMb,GAAN,yFACNI,EAAgBrB,IAAhB,mBAChBiB,EADgB,aADM,uBACrBS,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH","sources":["Pages/Movies.jsx","service/service.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { getSerchMovies } from 'service/service';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchParams.get('query') === null) {\n      return;\n    }\n    getSerchMovies(searchParams.get('query')).then(setMovie);\n  }, [searchParams, setMovie]);\n\n  const handlerInput = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"query\" value={query} onChange={handlerInput} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movie.length ? (\n        <ul>\n          {movie &&\n            movie.map(item => {\n              return (\n                <li key={item.id}>\n                  <Link state={{ from: location }} to={`/movies/${item.id}`}>\n                    {item.title ? item.title : item.name}\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      ) : (\n        <h3>Please enter the search request</h3>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY_API = 'a1fbf574afa240654ce82ff2490808e3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const getPoPMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data.results;\n};\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","query","setQuery","movie","setMovie","location","useLocation","useEffect","get","getSerchMovies","then","onSubmit","evt","preventDefault","type","name","value","onChange","target","length","map","item","state","from","to","id","title","defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPoPMovies","data","results","getDetailsMovies","getCastMovies","getRewiesMovies"],"sourceRoot":""}